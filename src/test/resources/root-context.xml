<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
	    http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- Uncomment and add your base-package here: <context:component-scan base-package="org.springframework.samples.service"/> -->

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:application.properties</value>
			</list>
		</property>
	</bean>
	
	<util:properties id="requestAnalyse" location="classpath:request_analyse.properties"/>
	<util:properties id="shareDomain" location="classpath:share_domain.properties"/>
	
	<context:component-scan base-package="com.concom.passport">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<context:component-scan base-package="com.concom.security"/>

	<bean id="master" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${r.jdbc.dirverClass}" />
		<property name="jdbcUrl" value="${r.jdbc.url}" />
		<property name="user" value="${r.jdbc.username}" />
		<property name="password" value="${r.jdbc.password}" />
		<property name="autoCommitOnClose" value="false" />
		<property name="initialPoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="1000" />
		<property name="idleConnectionTestPeriod" value="8" />
	</bean>
	
		<bean id="slave" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${w.jdbc.dirverClass}" />
		<property name="jdbcUrl" value="${w.jdbc.url}" />
		<property name="user" value="${w.jdbc.username}" />
		<property name="password" value="${w.jdbc.password}" />
		<property name="autoCommitOnClose" value="false" />
		<property name="initialPoolSize" value="10" />
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<property name="maxIdleTime" value="1800" />
		<property name="maxStatements" value="1000" />
		<property name="idleConnectionTestPeriod" value="8" />
	</bean>
	
	<!--  <bean id="mySqlDataSource" class="com.concom.mybatis.DynamicDataSource">   
        <property name="targetDataSources">   
            <map>   
                <entry key="slave" value-ref="slave"/>   
            </map>   
        </property>   
        <property name="defaultTargetDataSource" ref="master"/>   
    </bean> -->
    
     <bean id="mySqlDataSource" class="com.concom.mybatis.DynamicRWDataSourceProxy">   
        <property name="readDataSource" ref="master"/>
        <property name="writeDataSource" ref="slave"/>
    </bean>
    
    <!--  <bean id="mySqlDataSource" class="com.concom.mybatis.DynamicMultiRWDataSourceProxy">   
        <property name="readDataSources">
        	<list>
        		<ref bean="master"/>
        		<ref bean="master"/>
        		<ref bean="master"/>
        	</list>
        </property>
        <property name="writeDataSources">
        	<list>
        		<ref bean="slave"/>
        		<ref bean="slave"/>
        		<ref bean="slave"/>
        	</list>
        </property>
    </bean>  -->

	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="mySqlDataSource" />
		<property name="configLocation" value="classpath:META-INF/mybatis/mybatis.xml" />
		<property name="mapperLocations" value="classpath:META-INF/mybatis/mappers/**/*.xml" />
	</bean>
	
	<!-- <bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	
  <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager" >
    <tx:attributes>
      <tx:method name="save" propagation="REQUIRED" read-only="false" />
      <tx:method name="delete" propagation="REQUIRED" read-only="false" />
      <tx:method name="update" propagation="REQUIRED" read-only="false" />	
      <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>    
    <aop:pointcut id="txPointcut" expression="execution(* com.concom.shiro.application..*.*(..))" /> 把事务控制在Service层
    <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
  </aop:config> -->
  
	<aop:aspectj-autoproxy/>
	
	<!-- <bean id="exceptionHandler" class="com.concom.security.interfaces.handler.SpringExceptionHandler"/> -->
	
	<bean id="springBeanHolder" class="com.concom.security.infrastructure.helper.SpringBeanHolder"/>
	
	<import resource="classpath:META-INF/spring/spring-shiro.xml"/>
	
	<import resource="classpath:META-INF/spring/memcache-config.xml"/>
		
</beans>
